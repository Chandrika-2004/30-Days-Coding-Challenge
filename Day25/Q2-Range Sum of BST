Q : Given the root node of a binary search tree and two integers low and high, return the sum of values of all 
nodes with a value in the inclusive range [low, high].

Sol :

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def dfs(self, root, low, high):
        if not root:
            return 0
        total = 0
        if root.val >=  low and root.val <= high:
            total += root.val
        total += self.dfs(root.left, low, high)
        total += self.dfs(root.right, low, high)
        return total
    def rangeSumBST(self, root: Optional[TreeNode], low: int, high: int) -> int:
        return self.dfs(root, low, high)    

